#################################
#
# Trader Events
# by ICodeMaster
#
#################################

namespace = tradelogic

## Spawn Fleets
country_event = {
	id = tradelogic.00
	hide_window = yes 
	mean_time_to_happen = {
		months = 3
	}
	trigger = {
		AND = {
			any_owned_planet = {
				AND = {
					has_spaceport = yes
					has_spaceport_module = "spaceport_trading_platform"
				}
			}
			ruler = {
				check_variable = {
					which = fleets_needed 
					value > 0 
				}
			}
			has_country_flag = has_trader
		}
	}
	immediate = {
		random_owned_planet = {
			limit = {
				has_spaceport = yes
				has_spaceport_module = "spaceport_trading_platform"
			}
			save_event_target_as = launching_planet
		}
		random_country = {
			limit = {
				has_relation_flag = {
					who = ROOT 
					flag = TradingGuild
				}
			}
			save_event_target_as = trading_guild
		}
		create_fleet = {
			name = "Trading Caravan"
		}
		last_created_fleet = {
			set_owner = event_target:trading_guild
			random_list = {
				50 = {
					create_ship = {
						design = "C1"
						name = tradeship.name.1
					}
				}
				50 = {
					create_ship = {
						design = "C2"
						name = tradeship.name.2
					}
				}
			}
			create_ship = {
				name = "Escort"
				design = Protector
			}
			create_ship = {
				name = "Escort"
				design = Protector
			}
			create_ship = {
				name = "Escort"
				design = Protector
			}
			set_location = event_target:launching_planet
			set_variable = {
				which = delivery_energy
				value = 100
			}
			set_variable = {
				which = delivery_minerals
				value = 100
			}
			##fleet_event = { id = tradelogic.01 days = 5 }
			fleet_event = { id = tradeupdates.00 days = 1 }
		}
		ruler = {
			change_variable = {
				which = fleets_needed
				value = -1
			}
		}
	}	
}
fleet_event = {
	id = tradelogic.01
	hide_window = yes 
	mean_time_to_happen = {
		months = 6
	}
	trigger = {
		has_fleet_order = no
	}
	immediate = {
		SOLAR_SYSTEM = {
			save_event_target_as = starting_star
		}
		random_country = {
			limit = {
				has_relation_flag = {
					who = root.owner
					flag = RootCountry
				}
			}
			save_event_target_as = targetcountry
		}
		event_target:targetcountry = {
			random_owned_planet = {
				limit = {
					has_spaceport = yes 
					has_spaceport_module = "spaceport_trading_platform"
					has_building = "trading_market"
					NOT = {
						SOLAR_SYSTEM = event_target:starting_star
					}
					#check_variable = {
					#	which = bays
					#	value > 0
					#}
				}
				save_event_target_as = target_planet
				#change_variable = {
				#	which = bays
				#	value = -1
				#}
			}
		}
		queue_actions = {
			### Move to Location
			move_to = event_target:target_planet
			wait = 10
			##### Unload Resources
			effect = {
				id = tradelogic.1.delivery
				while = {
					limit = {
						ROOT = {
							check_variable = {
								which = delivery_energy
								value > 0
							}
						}
					}
					event_target:target_planet = {
						random_tile = {
							limit = {
								has_building = "trading_market" 
							}
							add_resource = {
								resource = energy
								amount = 1
								replace = no
							}
						}
						planet_event = { id = tradeupdates.10 days = 50 }
					}
				}
				while = {
					limit = {
						ROOT = {
							check_variable = {
								which = delivery_minerals
								value > 0
							}
						}
					}
					event_target:target_planet = {
						random_tile = {
							limit = {
								has_building = "trading_market" 
							}
							add_resource = {
								resource = minerals
								amount = 1
								replace = no
							}
						}
						planet_event = { id = tradeupdates.11 days = 50 }
					}
				}
			}
			wait = 10
			####### Loading Resources
			effect = {
				id = tradelogic.1.reload
				set_variable = {
					which = delivery_energy
					value = 50
				}
				set_variable = {
					which = delivery_minerals
					value = 50
				}
			}
			wait = 5
			effect = {
				id = tradelogic.1.depart
				fleet_event = { id = tradelogic.01 days = 3 }
				event_target:target_planet = {
					change_variable = {
						which = bays
						value = 1
					}
				}
			}
		}
	}
}